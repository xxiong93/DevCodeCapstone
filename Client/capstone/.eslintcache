[{"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\index.js":"1","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\App.js":"2","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\photos\\photos.js":"3","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\register\\register.js":"4","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\search\\searchParks.js":"5","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\trips\\addTrips.js":"6","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\login\\login.js":"7","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\landing\\landing.js":"8","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\location\\location.js":"9","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\Home.js":"10","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\trips\\displayTrips.js":"11","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\api\\api.js":"12","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\serviceWorker.js":"13","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\location\\currentLocation.js":"14","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\keys.js":"15"},{"size":312,"mtime":1614045145181,"results":"16","hashOfConfig":"17"},{"size":1534,"mtime":1614555750230,"results":"18","hashOfConfig":"17"},{"size":2526,"mtime":1614050540463,"results":"19","hashOfConfig":"17"},{"size":3115,"mtime":1614032752695,"results":"20","hashOfConfig":"17"},{"size":6593,"mtime":1614398956743,"results":"21","hashOfConfig":"17"},{"size":3257,"mtime":1614053238074,"results":"22","hashOfConfig":"17"},{"size":2839,"mtime":1614032722641,"results":"23","hashOfConfig":"17"},{"size":504,"mtime":1613973842555,"results":"24","hashOfConfig":"17"},{"size":4565,"mtime":1614396517187,"results":"25","hashOfConfig":"17"},{"size":903,"mtime":1614400828002,"results":"26","hashOfConfig":"17"},{"size":1601,"mtime":1613698049116,"results":"27","hashOfConfig":"17"},{"size":458,"mtime":1612848798503,"results":"28","hashOfConfig":"17"},{"size":5332,"mtime":1613966178557,"results":"29","hashOfConfig":"17"},{"size":1670,"mtime":1614556364890,"results":"30","hashOfConfig":"17"},{"size":157,"mtime":1614396389445,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lieeai",{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\index.js",[],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\App.js",["69","70","71","72"],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\photos\\photos.js",["73","74"],"import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { API_PICTURE_URL } from '../../api/api.js';\r\n\r\nclass ImageUpload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n\t\t\timagePreview_Url: '',\r\n\t\t\t// description: '',\r\n\t\t\t// name: '',\r\n\t\t\t// image: {}\r\n        };\r\n\r\n        this.handleImageChange = this.handleImageChange.bind(this);\r\n        this.SaveSubmit = this.SaveSubmit.bind(this);\r\n    }\r\n\r\n    SaveSubmit(event) {\r\n        event.preventDefault();\r\n        // console.log(this.state.imagePreview_Url);\r\n\t\tconst newurl = API_PICTURE_URL + '/upload';\r\n\t\t// const newfile = this.state.file;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.file, this.state.file.name);\r\n      \t// console.log(\"line 29\", this.state.file.name)\r\n\t\t// console.log(formData);\r\n\t\t   \r\n\t\taxios.post(newurl, formData)\r\n            .then(response => console.log('line 30' + response))\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            console.log(\"hit line 34\")\r\n\t\t\t// .then(response => this.setState({newfile: response.data.id}));\r\n\t\t\t\r\n\t}\r\n\r\n    handleImageChange(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            file: event.target.files[0]\r\n        })\r\n        console.log(event.target.files[0])\r\n    }\r\n\r\n    getImage(){\r\n\r\n        axios.get('http://localhost:5000/api/pictures')\r\n        .then(response => {\r\n            this.setState(this.state.file=response.data);\r\n            console.log(response);\r\n            console.log(this.state.file)\r\n        }).catch(error => console.log(error)\r\n\r\n        )\r\n        console.log(\"success\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{paddingTop:40}}>\r\n                <div>\r\n                    <form action='http://localhost:5000/api/pictures/upload' method=\"POST\" enctype=\"multipart/form-data\">\r\n                        <input type=\"file\" name=\"image\" />\r\n                        <input type='submit'></input>\r\n                        {/* <button onClick={this.SaveSubmit}>Save/Upload Image in DB</button>\r\n                        <button onClick={this.getImage}>GEt Image </button> */}\r\n                    </form>\r\n                </div>\r\n                \r\n                <div>\r\n                    <img src={this.state.imagePreview_Url} />\r\n                </div>                           \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ImageUpload;",["75","76"],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\register\\register.js",["77"],"import React, { useState }from 'react';\r\nimport {API_BASE_URL} from '../../api/api.js';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Register(props) {    \r\n    const [register, setRegister] = useState({\r\n        userName: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n    });\r\n    \r\n    function getCurrentUser(){\r\n        const newurl = API_BASE_URL;\r\n        axios({\r\n            method: 'get',\r\n            url: newurl,\r\n        }).then((response) => {\r\n            if(response.email === register.email){\r\n                props.setCurrentUser(response._id)            \r\n            }\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        let n = event.target.name;\r\n        setRegister(register => ({...register,\r\n            [n]: event.target.value,\r\n        }))\r\n        //console.log(n, event.target.value)\r\n    }\r\n    \r\n    const handleRegister = (event) => {\r\n        event.preventDefault();\r\n        const newurl = API_BASE_URL+'new';\r\n        \r\n        axios({\r\n            method: 'post',\r\n            url: newurl,\r\n            data: {\r\n                userName: register.userName,\r\n                password: register.password,\r\n                email: register.email\r\n            }\r\n        }).then(() => {\r\n            props.getCurrentUser();\r\n        })\r\n    }\r\n        return (            \r\n            <div className = \"registerInfo\">\r\n              <div>\r\n                <h2 className = \"registerTitle\" >Register</h2>\r\n              </div>\r\n                <form className = \"form-register form-floating\" onSubmit={handleRegister}>\r\n                    <label htmlFor = \"registerName\">Name </label>\r\n                    <input \r\n                        type = \"text\" \r\n                        id = \"registerName\" \r\n                        name = 'userName'  \r\n                        className = \"form-control text-box\"\r\n                        value={register.name}\r\n                        onChange={handleChange}\r\n                    >\r\n        \r\n                    </input>\r\n                    <label htmlFor = \"registerEmail\">Email</label>\r\n                    <input \r\n                        type = \"text\" \r\n                        id = \"registerEmail\" \r\n                        name = 'email'  \r\n                        className = \"form-control text-box\"\r\n                        value={register.email}\r\n                        onChange={handleChange}\r\n                    >\r\n                    </input>\r\n                    <label htmlFor = \"registerPassword\">Password</label>\r\n                    <input \r\n                        type = \"text\" \r\n                        id = \"registerPassword\" \r\n                        name = 'password'  \r\n                        className = \"form-control text-box\"\r\n                        value={register.password}\r\n                        onChange={handleChange}\r\n                    >\r\n        \r\n                    </input>\r\n                    <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">Register</button>\r\n                </form>\r\n            </div>\r\n        )\r\n        \r\n\r\n    }\r\nexport default Register;","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\search\\searchParks.js",["78","79","80","81","82"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { NPS_BASE_URL } from \"../../api/api\";\r\n// import {NPS_KEY} from '../../../src/keys.js';\r\n\r\nfunction SearchParks() {\r\n  const [search, setSearch] = useState([]);\r\n  const [parkActivity, setActivity] = useState({ query: '' });\r\n  const [stateName, setStateName] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  let handleChange = (event) => {\r\n\r\n    setActivity({ query: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    getParkData();    \r\n    parksTable();\r\n  }\r\n\r\n  const getParkData = async () => {\r\n     const params = {\r\n      apiKey: \"atJaeoob0GDLz2RZbFc2s6IENE8uJOEpJJ8Kyesz\",\r\n      query: parkActivity.query,\r\n      stateCode: \"\",\r\n      limit: 5,\r\n      start: 0,\r\n    };\r\n\r\n    const url = `https://developer.nps.gov/api/v1/parks?API_KEY=${params.apiKey}&stateCode=CA&q=${params.query}&limit=${params.limit}`;\r\n     await axios.get(url)\r\n      .then(parkData => {\r\n        // console.log(parkData)\r\n        setSearch(parkData.data.data);\r\n        console.log(parkData.data.data);\r\n        console.log(search[0].entranceFees[0].cost);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  \r\n\r\n  const parksTable = () => {\r\n    const table = document.getElementById(\"park-states\");\r\n    \r\n    for (let i = 0; i < search.length; i++) {\r\n      let row = `<th>Park Name</th><th>State</th><th>Admission Fee</th><th>Open Hours Sun-Sat</th>\r\n\r\n                <tr>\r\n                    \r\n                    <td>${search[i].fullName}        \r\n                    </td>\r\n                    <td>${search[i].states}\r\n                    </td>\r\n                    <td>$${search[i].entranceFees[0].cost}\r\n                    </td>\r\n                    <td>${search[i].operatingHours[0].standardHours.sunday}\r\n                    </td>\r\n                    \r\n\r\n                </tr>`;\r\n\r\n      table.innerHTML += row;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    getParkData();\r\n    // parksTable();\r\n  },[])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Search for Activities</h2>\r\n        {loading ? (\r\n          <div>loading...</div>\r\n        ) : (\r\n          <div>\r\n            <form onSubmit={handleSubmit} id=\"search-activities\">\r\n              <div>\r\n                <label className=\"activities-search-label\" for=\"search\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"search-input\"\r\n                    id=\"activities\"\r\n                    name=\"activity\"\r\n                    placeholder=\"Find an activity\"\r\n                    value={parkActivity.query}\r\n                    onChange={handleChange}\r\n                  ></input>\r\n                </label>\r\n                {/* <label className=\"state-search-label\" for=\"search\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"state-input\"\r\n                    id=\"states\"\r\n                    name=\"state\"\r\n                    placeholder=\"Choose a state\"\r\n                    onChange={handleChange}\r\n                  ></input>\r\n                </label> */}\r\n                <input type='submit' value='Search' ></input>\r\n              </div>\r\n              <div>\r\n              <table id=\"park-states\" >\r\n                <tbody>\r\n                  <tr>\r\n                    {/* <td>{JSON.stringify(search.data[]0)}</td> */}\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            </form>\r\n            <div id=\"search-display\">\r\n              <p className=\"search-results\" value={search}></p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n              }\r\nexport default SearchParks;\r\n\r\n\r\n\r\n            {/* <select name=\"state-ops\" id=\"state-ops\" form=\"search-activities\">\r\n              <option value=\"AL\">Alabama</option>\r\n              <option value=\"AK\">Alaska</option>\r\n              <option value=\"AZ\">Arizona</option>\r\n              <option value=\"AR\">Arkansas</option>\r\n              <option value=\"CA\">California</option>\r\n              <option value=\"CO\">Colorado</option>\r\n              <option value=\"CT\">Connecticut</option>\r\n              <option value=\"DE\">Delaware</option>\r\n              <option value=\"FL\">Florida</option>\r\n              <option value=\"GA\">Georgia</option>\r\n              <option value=\"HI\">Hawaii</option>\r\n              <option value=\"ID\">Idaho</option>\r\n              <option value=\"IL\">Illinois</option>\r\n              <option value=\"IN\">Indiana</option>\r\n              <option value=\"IA\">Iowa</option>\r\n              <option value=\"KS\">Kansas</option>\r\n              <option value=\"KY\">Kentucky</option>\r\n              <option value=\"LA\">Louisiana</option>\r\n              <option value=\"ME\">Maine</option>\r\n              <option value=\"MD\">Maryland</option>\r\n              <option value=\"MA\">Massachusetts</option>\r\n              <option value=\"MI\">Michigan</option>\r\n              <option value=\"MN\">Minnesota</option>\r\n              <option value=\"MS\">Mississippi</option>\r\n              <option value=\"MO\">Missouri</option>\r\n              <option value=\"MT\">Montana</option>\r\n              <option value=\"NE\">Nebraska</option>\r\n              <option value=\"NV\">Nevada</option>\r\n              <option value=\"NH\">New Hampshire</option>\r\n              <option value=\"NJ\">New Jersey</option>\r\n              <option value=\"NM\">New Mexico</option>\r\n              <option value=\"NY\">New York</option>\r\n              <option value=\"NC\">North Carolina</option>\r\n              <option value=\"ND\">North Dakota</option>\r\n              <option value=\"OH\">Ohio</option>\r\n              <option value=\"OK\">Oklahoma</option>\r\n              <option value=\"OR\">Oregon</option>\r\n              <option value=\"PA\">Pennsylvania</option>\r\n              <option value=\"RI\">Rhode Island</option>\r\n              <option value=\"SC\">South Carolina</option>\r\n              <option value=\"SD\">South Dakota</option>\r\n              <option value=\"TN\">Tennessee</option>\r\n              <option value=\"TX\">Texas</option>\r\n              <option value=\"UT\">Utah</option>\r\n              <option value=\"VT\">Vermont</option>\r\n              <option value=\"VA\">Virginia</option>\r\n              <option value=\"WA\">Washington</option>\r\n              <option value=\"WV\">West Virginia</option>\r\n              <option value=\"WI\">Wisconsin</option>\r\n              <option value=\"WY\">Wyoming</option>\r\n            </select> */}\r\n","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\trips\\addTrips.js",["83"],"import React, { useState, useEffect } from \"react\";\r\nimport { API_TRIP_URL } from \"../../api/api.js\";\r\n// import DisplayTrips from \"./displayTrips.js\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction NewTrip() {\r\n  const [trip, setTrip] = useState({ parkName: \"\", stateName: \"\" });\r\n  const [allTrips, setAllTrips] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault();\r\n    let data = event.target.name;\r\n    setTrip((trip) => ({ ...trip, [data]: event.target.value }));\r\n    // console.log(trip);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const url = API_TRIP_URL + \"/new\";\r\n\r\n    await axios\r\n      .post(url, {\r\n        parkName: trip.parkName,\r\n        stateName: trip.stateName,\r\n      })\r\n      .then((response) => {\r\n        // console.log(response)\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n      });\r\n  };\r\n\r\n  const showTrips = (event) => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/trips\")\r\n      .then(response => {\r\n        setAllTrips(response.data);\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return null;\r\n      });\r\n  };\r\n\r\n  const parkVisited = () => {\r\n\r\n      document.getElementById('tripName').style = \"Color: red\";\r\n \r\n   \r\n   \r\n  }\r\n\r\n  const getParkNames = allTrips.map((item, index, array) => {\r\n    return item.parkName;\r\n    // console.log(item.parkName);\r\n  });\r\n  const getStateNames = allTrips.map((item, index, array) => {\r\n    return item.stateName;\r\n    // console.log(item.stateName);\r\n  });\r\n\r\n  const buildTripTable = () => {\r\n    const table = document.getElementById(\"tripTable\");\r\n    for (let i = 0; i < allTrips.length; i++) {\r\n      let row = `<th>Park Name</th>  <th>State</th>\r\n                <tr>\r\n                    <td id='tripName'>${getParkNames[i]}\r\n                    </td>\r\n                    <td >${getStateNames[i]}\r\n                    </td>\r\n                <tr>`;\r\n\r\n      table.innerHTML += row;\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    showTrips();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Trip Planner</h2>\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Park Name\"\r\n            name=\"parkName\"\r\n            id=\"newPark\"\r\n            value={trip.parkName}\r\n            onChange={handleChange}\r\n          ></input>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"State\"\r\n            name=\"stateName\"\r\n            id=\"newState\"\r\n            value={trip.stateName}\r\n            onChange={handleChange}\r\n          ></input>\r\n          <button type=\"submit\" className=\"submit-button\">\r\n            Add trip\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"showTrips\" id=\"displayTrips\">\r\n        <button onClick={buildTripTable}>View Trips</button>\r\n        <button id='visitedPark' onClick={parkVisited}>Park Visited</button>\r\n\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <table>\r\n          <tbody id=\"tripTable\"></tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTrip;\r\n","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\login\\login.js",["84"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {API_BASE_URL, API_LOGIN_URL} from '../../api/api.js';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction Login (props) {\r\n    const [login, setLogin] = useState({ email: '', password: '' });\r\n    let history = useHistory();\r\n    \r\n    function getUser(){\r\n            const newurl = API_BASE_URL;\r\n            axios({\r\n                method: 'get',\r\n                url: newurl\r\n            }).then((res) => {\r\n                res.data.forEach(user => {\r\n                    if(login.email === user.email){\r\n                        props.setCurrentUser(user._id);                                                \r\n                    }\r\n                });\r\n                console.log(res.data);\r\n            })\r\n            console.log('getUser() Called')\r\n        }\r\n\r\n\r\n    const handleChange = (event) => {\r\n        let data = event.target.name;\r\n        setLogin(login => ({...login,\r\n            [data]: event.target.value\r\n        }))\r\n        console.log(login);\r\n    }\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n        const newurl = API_LOGIN_URL + 'login';\r\n        axios({\r\n            method: 'post',\r\n            url: newurl,\r\n            data: {\r\n                password: login.password,\r\n                email: login.email\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response);\r\n            if (response.status === 200) {\r\n                sessionStorage.setItem('sessionId', response.data);\r\n                history.push('/home')\r\n            }\r\n            props.getUser();\r\n            //console.log(sessionStorage)\r\n        });\r\n    }\r\n    return(\r\n        <div className='loginInfo'>\r\n            <h2>Login</h2>\r\n            <form className = \"login-form\" onSubmit = {handleLogin}>\r\n                <label htmlFor = \"loginEmail\">Email</label>\r\n                <input \r\n                    type = \"text\"\r\n                    id = \"loginEmail\"\r\n                    name = \"email\"\r\n                    className = \"form-control text-box\"\r\n                    value = {login.email}\r\n                    onChange = {handleChange}\r\n                >\r\n\r\n                </input>\r\n                <label htmlFor = \"loginPassword\">Password</label>\r\n                <input\r\n                    type = \"text\"\r\n                    id = \"loginPassword\"\r\n                    name = \"password\"\r\n                    className = \"form-control text-box\"\r\n                    value = {login.password}\r\n                    onChange = {handleChange}\r\n                >\r\n\r\n                </input>\r\n                <button type = \"submit\" className = \"loginButton\" onSubmit = {handleLogin}>Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\landing\\landing.js",[],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\location\\location.js",["85"],"import React, { Component } from \"react\";\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport {GOOGLE_MAPS_KEY} from '../../keys.js';\r\n\r\nexport class MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n\r\n      showingInfoWindow: false,\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      // latitude: null,\r\n      // longitude: null,\r\n      mapCenter: {\r\n        lat: null,\r\n        lng: null,\r\n      },\r\n    };\r\n    // this.getLocation = this.getLocation.bind(this);\r\n    // this.getCoordinates = this.getCoordinates.bind(this);\r\n  }\r\n\r\n  getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(this.getCoordinates);\r\n    } else {\r\n      alert = \"Geolocation is not supported by this browser.\";\r\n    }\r\n  }\r\n\r\n  getCoordinates(position){\r\n    console.log(position);\r\n    this.setState({\r\n      latitude: position.coords.latitude,\r\n      longitude: position.coords.longitude\r\n    })\r\n  }\r\n  \r\n  getCurrentLocation = (position) => {\r\n    this.setState({\r\n    })\r\n  }\r\n  handleChange = (address) => {\r\n    this.setState({ address });\r\n  };\r\n\r\n  handleSelect = (address) => {\r\n    this.setState({ address });\r\n    geocodeByAddress(address)\r\n      .then((results) => getLatLng(results[0]))\r\n      .then((latLng) => {\r\n        console.log(\"Success\", latLng);\r\n\r\n        this.setState({ mapCenter: latLng });\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  };\r\n\r\n\r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n \r\n  onMapClicked = (props) => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      })\r\n    }\r\n  };\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div id=\"googleMaps\">\r\n        <PlacesAutocomplete\r\n          value={this.state.address}\r\n          onChange={this.handleChange}\r\n          onSelect={this.handleSelect}\r\n        >\r\n          {({\r\n            getInputProps,\r\n            suggestions,\r\n            getSuggestionItemProps,\r\n            loading,\r\n          }) => (\r\n            <div>\r\n              <input\r\n                {...getInputProps({\r\n                  placeholder: \"Search for parks\",\r\n                  className: \"location-search-input\",\r\n                })}\r\n              />\r\n              {/* <button onClick={this.getLocation}>Get Current Location</button> */}\r\n              <div className=\"autocomplete-dropdown-container\">\r\n                {loading && <div>Loading...</div>}\r\n                {suggestions.map((suggestion) => {\r\n                  const className = suggestion.active\r\n                    ? \"suggestion-item--active\"\r\n                    : \"suggestion-item\";\r\n                  const style = suggestion.active\r\n                    ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\r\n                    : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n                  return (\r\n                    <div\r\n                      {...getSuggestionItemProps(suggestion, {\r\n                        className,\r\n                        style,\r\n                      })}\r\n                    >\r\n                      <span>{suggestion.description}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </PlacesAutocomplete>\r\n\r\n        <Map\r\n          google={this.props.google}\r\n          onClick={this.onMapClicked}\r\n          initialCenter={{\r\n            lat: this.state.mapCenter.lat,\r\n            lng: this.state.mapCenter.lng,\r\n          }}\r\n          center={{\r\n            lat: this.state.mapCenter.lat,\r\n            lng: this.state.mapCenter.lng,\r\n          }}\r\n        >\r\n          <Marker\r\n            position={{\r\n              lat: this.state.mapCenter.lat,\r\n              lng: this.state.mapCenter.lng,\r\n            }}\r\n            onClick={this.onMarkerClick}\r\n          />\r\n\r\n          <InfoWindow\r\n            marker={this.state.activeMarker}\r\n            visible={this.state.showingInfoWindow}>\r\n            <div>\r\n              <h1>{this.state.selectedPlace.name}</h1>\r\n            </div>\r\n          </InfoWindow>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: GOOGLE_MAPS_KEY,\r\n})(MapContainer);\r\n","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\Home.js",["86","87","88"],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\trips\\displayTrips.js",[],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\api\\api.js",[],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\serviceWorker.js",[],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\location\\currentLocation.js",["89"],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\keys.js",[],{"ruleId":"90","severity":1,"message":"91","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":13},{"ruleId":"90","severity":1,"message":"94","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":16},{"ruleId":"90","severity":1,"message":"95","line":15,"column":3,"nodeType":"92","messageId":"93","endLine":15,"endColumn":13},{"ruleId":"96","severity":1,"message":"97","line":36,"column":54,"nodeType":"98","messageId":"99","endLine":36,"endColumn":55},{"ruleId":"100","severity":1,"message":"101","line":53,"column":27,"nodeType":"102","endLine":53,"endColumn":37},{"ruleId":"103","severity":1,"message":"104","line":74,"column":21,"nodeType":"105","endLine":74,"endColumn":62},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"90","severity":1,"message":"110","line":13,"column":14,"nodeType":"92","messageId":"93","endLine":13,"endColumn":28},{"ruleId":"90","severity":1,"message":"111","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":22},{"ruleId":"90","severity":1,"message":"112","line":9,"column":10,"nodeType":"92","messageId":"93","endLine":9,"endColumn":19},{"ruleId":"90","severity":1,"message":"113","line":9,"column":21,"nodeType":"92","messageId":"93","endLine":9,"endColumn":33},{"ruleId":"114","severity":1,"message":"115","line":77,"column":5,"nodeType":"116","endLine":77,"endColumn":7,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":137,"column":13,"nodeType":"120","messageId":"121","endLine":188,"endColumn":26},{"ruleId":"90","severity":1,"message":"122","line":10,"column":10,"nodeType":"92","messageId":"93","endLine":10,"endColumn":17},{"ruleId":"90","severity":1,"message":"123","line":11,"column":14,"nodeType":"92","messageId":"93","endLine":11,"endColumn":21},{"ruleId":"106","severity":1,"message":"124","line":33,"column":7,"nodeType":"92","messageId":"125","endLine":33,"endColumn":12},{"ruleId":"90","severity":1,"message":"126","line":3,"column":40,"nodeType":"92","messageId":"93","endLine":3,"endColumn":45},{"ruleId":"90","severity":1,"message":"127","line":3,"column":47,"nodeType":"92","messageId":"93","endLine":3,"endColumn":53},{"ruleId":"90","severity":1,"message":"128","line":6,"column":11,"nodeType":"92","messageId":"93","endLine":6,"endColumn":18},{"ruleId":"106","severity":1,"message":"124","line":23,"column":7,"nodeType":"92","messageId":"125","endLine":23,"endColumn":12},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'IndexRoute' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["129"],"no-negated-in-lhs",["130"],"'getCurrentUser' is defined but never used.","'NPS_BASE_URL' is defined but never used.","'stateName' is assigned a value but never used.","'setStateName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getParkData'. Either include it or remove the dependency array.","ArrayExpression",["131"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'loading' is assigned a value but never used.","'getUser' is defined but never used.","Read-only global 'alert' should not be modified.","nativeReassign","'Route' is defined but never used.","'Switch' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [getParkData]",{"range":"134","text":"135"},[2127,2129],"[getParkData]"]