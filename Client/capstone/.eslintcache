[{"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\index.js":"1","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\App.js":"2","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\login\\login.js":"3","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\api\\api.js":"4","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\photos\\photos.jsx":"5"},{"size":232,"mtime":1612505956310,"results":"6","hashOfConfig":"7"},{"size":291,"mtime":1612647919272,"results":"8","hashOfConfig":"7"},{"size":3006,"mtime":1612505956309,"results":"9","hashOfConfig":"7"},{"size":394,"mtime":1612647919272,"results":"10","hashOfConfig":"7"},{"size":1957,"mtime":1612647919276,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1lieeai",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\index.js",[],["24","25"],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\App.js",[],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\login\\login.js",["26"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {API_BASE_URL, API_LOGIN_URL} from '../../api/api.js';\r\n\r\n\r\nfunction Login (event) {\r\n    //i need a function for login\r\n    //i need to handle change of info in the email and password form\r\n    //i need to handle the submit of data in the form field\r\n    const [login, setLogin] = useState({ email: '', password: '' });\r\n    //i  need a function that will retrieve the user's info from server\r\n        //this would be an axios get request\r\n        //i need to get the user's username and password\r\n        function getUser(){\r\n            const newurl = API_BASE_URL;\r\n            axios({\r\n                method: 'get',\r\n                url: newurl\r\n            }).then((res) => {\r\n                // res.data.forEach(user => {\r\n                //     if(login.email === user.email){\r\n                //         event.setCurrentUser(user._id);                                                \r\n                //     }\r\n                // });\r\n                console.log(res.data);\r\n            })\r\n            console.log('getUser() Called')\r\n        }\r\n\r\n\r\n    const handleChange = (event) => {\r\n        let data = event.target.name;\r\n        setLogin(login => ({...login,\r\n            [event.target.name]: event.target.value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newurl = API_LOGIN_URL + 'login';\r\n        axios({\r\n            method: 'post',\r\n            url: newurl,\r\n            data: {\r\n                password: login.password,\r\n                email: login.email\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response);\r\n            if (response.status === 200) {\r\n                sessionStorage.setItem('sessionId', response.data);\r\n            }\r\n            getUser();\r\n            //console.log(sessionStorage)\r\n        });\r\n    }\r\n    return(\r\n        <div>\r\n            <form className = \"login-form\" onSubmit = {handleSubmit}>\r\n                <label htmlFor = \"loginEmail\">Email</label>\r\n                <input \r\n                    type = \"text\"\r\n                    id = \"loginEmail\"\r\n                    name = \"email\"\r\n                    className = \"form-control text-box\"\r\n                    value = {login.email}\r\n                    onChange = {handleChange}\r\n                >\r\n\r\n                </input>\r\n                <label htmlFor = \"passwordLogin\">Password</label>\r\n                <input\r\n                    type = \"text\"\r\n                    id = \"loginPassword\"\r\n                    name = \"password\"\r\n                    className = \"form-control text-box\"\r\n                    value = {login.password}\r\n                    onChange = {handleChange}\r\n                >\r\n\r\n                </input>\r\n                <button type = \"submit\" className = \"loginButton\" onSubmit = {handleSubmit}>Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\api\\api.js",[],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\photos\\photos.jsx",["27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":32,"column":13,"nodeType":"34","messageId":"35","endLine":32,"endColumn":17},{"ruleId":"36","severity":1,"message":"37","line":63,"column":21,"nodeType":"38","endLine":63,"endColumn":62},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]