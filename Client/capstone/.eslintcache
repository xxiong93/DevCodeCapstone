[{"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\index.js":"1","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\App.js":"2","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\trips\\addTrips.js":"3","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\login\\login.js":"4","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\search\\searchActivities.js":"5","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\register\\register.js":"6","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\api\\api.js":"7","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\trips\\displayTrips.js":"8","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\photos\\photos.js":"9","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\location\\location.js":"10"},{"size":232,"mtime":1612847741002,"results":"11","hashOfConfig":"12"},{"size":670,"mtime":1613604948485,"results":"13","hashOfConfig":"12"},{"size":3922,"mtime":1613527618219,"results":"14","hashOfConfig":"12"},{"size":2699,"mtime":1613518332107,"results":"15","hashOfConfig":"12"},{"size":6312,"mtime":1613537910305,"results":"16","hashOfConfig":"12"},{"size":3109,"mtime":1613439227054,"results":"17","hashOfConfig":"12"},{"size":458,"mtime":1612848798503,"results":"18","hashOfConfig":"12"},{"size":1551,"mtime":1613439646357,"results":"19","hashOfConfig":"12"},{"size":2520,"mtime":1613605624167,"results":"20","hashOfConfig":"12"},{"size":3586,"mtime":1613612905731,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1lieeai",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\index.js",[],["47","48"],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\App.js",[],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\trips\\addTrips.js",["49"],"import React, { useState, useEffect } from 'react';\r\nimport { API_TRIP_URL } from '../../api/api.js';\r\nimport DisplayTrips from './displayTrips.js';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction NewTrip() {\r\n\r\n    const [trip, setTrip] = useState({parkName: '', stateName: ''});\r\n    const [allTrips, setAllTrips] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n        let data = event.target.name;\r\n        setTrip(trip =>({...trip,\r\n            [event.target.name]: event.target.value}))\r\n        // console.log(trip);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const url = API_TRIP_URL+\"/new\";\r\n        \r\n        axios.post(url, {\r\n            parkName: trip.parkName,\r\n            stateName: trip.stateName\r\n        }).then(response => {\r\n            // console.log(response)\r\n        }).catch(error => {\r\n            // console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    const showTrips = (event) => {\r\n    //use map() function for saving response data or use an array\r\n    //look at axios and api calls to only disply the data i want to \r\n    //check \r\n    axios.get('http://localhost:5000/api/trips')\r\n        .then(response => {\r\n            setAllTrips(response.data)\r\n\r\n            // console.log(allTrips[3].parkName);\r\n            // const getParks = allTrips.map((item, index, array) => {\r\n            //     return getParks.parkName;\r\n            // })\r\n            // const getStates = allTrips.map((item, index, array) => {\r\n            //     return getParks.stateName;\r\n            // })\r\n            // console.log(getParks[0] + ' ' + getStates[0]);\r\n            // console.log('line 53');\r\n            return (response.data)\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n        // return (response.data)\r\n    }\r\n\r\n    // const getParkNames = allTrips.map((item, index, array) => {\r\n    //     return item.parkName;\r\n    //     console.log(item.parkName);\r\n    // })\r\n    // const getStateNames = allTrips.map((item, index, array) => {\r\n    //     return item.stateName;\r\n    //     console.log(item.stateName);\r\n    // })\r\n\r\n    // const buildTable = () => {\r\n    //     const table = document.getElementById('tripTable')\r\n\r\n    //     for(let i=0; i<allTrips.length; i++){\r\n    //         let row = `<tr>\r\n    //                         <td>${getParkNames[i]} ${getStateNames[i]}</td>\r\n    //                    <tr>\r\n    //                    `\r\n\r\n    //         table.innerHTML += row\r\n    //     }\r\n    // }\r\n   \r\n    useEffect(()=>{\r\n        showTrips();\r\n        setLoading(false);\r\n        // buildTable();\r\n    },[])\r\n    return(\r\n        <div>\r\n            <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type='text' placeholder='Park Name' name='parkName' id='newPark' value={trip.parkName} onChange={handleChange}></input>\r\n                <br/>\r\n                <input type='text' placeholder='State' name='stateName' id='newState' value={trip.stateName} onChange={handleChange}></input>\r\n                <button type=\"submit\" className='submit-button' >Add</button>\r\n            </form>\r\n            </div>\r\n            <div className='showTrips' id='displayTrips' >\r\n                {/* {console.log(allTrips)} */}\r\n               {loading ? <div>loading...</div> : <DisplayTrips allTrips={allTrips} viewTrips={'Trips added to list'}/>}\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <table>\r\n                    <tbody id=\"tripTable\">\r\n                        <tr>\r\n                            {/* <td>{getParkNames[0]}</td>\r\n                            <td>{getStateNames[0]}</td> */}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n    }\r\n\r\n\r\nexport default NewTrip;","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\login\\login.js",["50"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {API_BASE_URL, API_LOGIN_URL} from '../../api/api.js';\r\n\r\n\r\nfunction Login (props) {\r\n    const [login, setLogin] = useState({ email: '', password: '' });\r\n        \r\n    \r\n    function getUser(){\r\n            const newurl = API_BASE_URL;\r\n            axios({\r\n                method: 'get',\r\n                url: newurl\r\n            }).then((res) => {\r\n                res.data.forEach(user => {\r\n                    if(login.email === user.email){\r\n                        props.setCurrentUser(user._id);                                                \r\n                    }\r\n                });\r\n                console.log(res.data);\r\n            })\r\n            console.log('getUser() Called')\r\n        }\r\n\r\n\r\n    const handleChange = (event) => {\r\n        let data = event.target.name;\r\n        setLogin(login => ({...login,\r\n            data: event.target.value\r\n        }))\r\n        console.log(login);\r\n    }\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n        const newurl = API_LOGIN_URL + 'login';\r\n        axios({\r\n            method: 'post',\r\n            url: newurl,\r\n            data: {\r\n                password: login.password,\r\n                email: login.email\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response);\r\n            if (response.status === 200) {\r\n                sessionStorage.setItem('sessionId', response.data);\r\n            }\r\n            getUser();\r\n            //console.log(sessionStorage)\r\n        });\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Login</h1>\r\n            <form className = \"login-form\" onSubmit = {handleLogin}>\r\n                <label htmlFor = \"loginEmail\">Email</label>\r\n                <input \r\n                    type = \"text\"\r\n                    id = \"loginEmail\"\r\n                    name = \"email\"\r\n                    className = \"form-control text-box\"\r\n                    value = {login.email}\r\n                    onChange = {handleChange}\r\n                >\r\n\r\n                </input>\r\n                <label htmlFor = \"passwordLogin\">Password</label>\r\n                <input\r\n                    type = \"text\"\r\n                    id = \"loginPassword\"\r\n                    name = \"password\"\r\n                    className = \"form-control text-box\"\r\n                    value = {login.password}\r\n                    onChange = {handleChange}\r\n                >\r\n\r\n                </input>\r\n                <button type = \"submit\" className = \"loginButton\" onSubmit = {handleLogin}>Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\search\\searchActivities.js",["51","52","53","54","55"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { NPS_BASE_URL } from \"../../api/api\";\r\n// import {NPS_KEY} from '../../../src/keys.js';\r\n\r\nfunction SearchActivities() {\r\n  const [search, setSearch] = useState();\r\n  const [parkActivity, setActivity] = useState({ activity: \"\", states: \"\" });\r\n  const [stateName, setStateName] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  //i need filter to search to only show specific info\r\n  //i need a function that will allow user to specify state\r\n  //i need a fucntion that wil specify number of options shown\r\n  const getActivities = () => {\r\n    const api = `https://developer.nps.gov/api/v1/activities/parks?`;\r\n    const parkQ = `q=` + parkActivity.activity;\r\n    const parkS = `stateCode=` + parkActivity.states;\r\n    const apiKey = \"&API_KEY=atJaeoob0GDLz2RZbFc2s6IENE8uJOEpJJ8Kyesz\";\r\n    //function that will filter for state withing the array, response.data.data[0].parks[need this value]\r\n\r\n    const url = api + parkQ + apiKey;\r\n    console.log(url);\r\n    console.log(parkQ);\r\n    console.log(parkS);\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        setSearch(response.data);\r\n        console.log(\"this line\");\r\n        console.log(search.data[0].parks[0].states);\r\n        // console.log(response.data.data[0].parks[7].fullName);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    return search;\r\n  };\r\n\r\n  \r\n  //i need a variable that will hold this search data\r\n  //i need this variable to specify the activity from a state\r\n  const handleChange = (event) => {\r\n    // const data = event.target.value;\r\n    // setActivity(event.target.value);\r\n    // console.log(data);\r\n\r\n    let data = event.target.name;\r\n    setActivity((search) => ({\r\n      ...search,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    console.log(search);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    getActivities();\r\n  };\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    setLoading(false);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {loading ? (\r\n          <div>loading...</div>\r\n        ) : (\r\n          <div>\r\n            <form onSubmit={handleSubmit} id=\"search-activities\">\r\n              <div>\r\n                <label className=\"search-label\" for=\"search\"></label>\r\n                <input\r\n                  className=\"search-input\"\r\n                  id=\"search\"\r\n                  name=\"activity\"\r\n                  placeholder=\"Search Activities\"\r\n                  onChange={handleChange}\r\n                ></input>\r\n\r\n                <label className=\"state-label\" for=\"search\"></label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"state-input\"\r\n                  id=\"state\"\r\n                  name=\"states\"\r\n                  placeholder=\"Choose state\"\r\n                  onChange={handleChange}\r\n                ></input>\r\n              </div>\r\n            </form>\r\n            <select name=\"state-ops\" id=\"state-ops\" form=\"search-activities\">\r\n              <option value=\"AL\">Alabama</option>\r\n              <option value=\"AK\">Alaska</option>\r\n              <option value=\"AZ\">Arizona</option>\r\n              <option value=\"AR\">Arkansas</option>\r\n              <option value=\"CA\">California</option>\r\n              <option value=\"CO\">Colorado</option>\r\n              <option value=\"CT\">Connecticut</option>\r\n              <option value=\"DE\">Delaware</option>\r\n              <option value=\"FL\">Florida</option>\r\n              <option value=\"GA\">Georgia</option>\r\n              <option value=\"HI\">Hawaii</option>\r\n              <option value=\"ID\">Idaho</option>\r\n              <option value=\"IL\">Illinois</option>\r\n              <option value=\"IN\">Indiana</option>\r\n              <option value=\"IA\">Iowa</option>\r\n              <option value=\"KS\">Kansas</option>\r\n              <option value=\"KY\">Kentucky</option>\r\n              <option value=\"LA\">Louisiana</option>\r\n              <option value=\"ME\">Maine</option>\r\n              <option value=\"MD\">Maryland</option>\r\n              <option value=\"MA\">Massachusetts</option>\r\n              <option value=\"MI\">Michigan</option>\r\n              <option value=\"MN\">Minnesota</option>\r\n              <option value=\"MS\">Mississippi</option>\r\n              <option value=\"MO\">Missouri</option>\r\n              <option value=\"MT\">Montana</option>\r\n              <option value=\"NE\">Nebraska</option>\r\n              <option value=\"NV\">Nevada</option>\r\n              <option value=\"NH\">New Hampshire</option>\r\n              <option value=\"NJ\">New Jersey</option>\r\n              <option value=\"NM\">New Mexico</option>\r\n              <option value=\"NY\">New York</option>\r\n              <option value=\"NC\">North Carolina</option>\r\n              <option value=\"ND\">North Dakota</option>\r\n              <option value=\"OH\">Ohio</option>\r\n              <option value=\"OK\">Oklahoma</option>\r\n              <option value=\"OR\">Oregon</option>\r\n              <option value=\"PA\">Pennsylvania</option>\r\n              <option value=\"PR\">Puerto Rico</option>\r\n              <option value=\"RI\">Rhode Island</option>\r\n              <option value=\"SC\">South Carolina</option>\r\n              <option value=\"SD\">South Dakota</option>\r\n              <option value=\"TN\">Tennessee</option>\r\n              <option value=\"TX\">Texas</option>\r\n              <option value=\"UT\">Utah</option>\r\n              <option value=\"VT\">Vermont</option>\r\n              <option value=\"VA\">Virginia</option>\r\n              <option value=\"WA\">Washington</option>\r\n              <option value=\"WV\">West Virginia</option>\r\n              <option value=\"WI\">Wisconsin</option>\r\n              <option value=\"WY\">Wyoming</option>\r\n            </select>\r\n            <div>\r\n              <button onClick={handleSubmit}>Submit</button>\r\n            </div>\r\n            <div>\r\n              <table id=\"activity-states\">\r\n                <tbody>\r\n                  <tr>\r\n                    {/* <td type='text' value={search.data[0].parks[0].states}>{search.data[0].parks[0].states}</td> */}\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchActivities;\r\n","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\register\\register.js",[],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\api\\api.js",[],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\trips\\displayTrips.js",["56","57","58"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function DisplayTrips(props) {\r\n\r\n   \r\n    // const getParkNames = props.allTrips.map((item, index, array) => {\r\n    //     return item.parkName;\r\n    //     console.log(item.parkName);\r\n    // })\r\n    // const getStateNames = props.allTrips.map((item, index, array) => {\r\n    //     return item.stateName;\r\n    //     console.log(item.stateName);\r\n    // })\r\n   \r\n    // const numItems = (event) => {\r\n    //     const num = event.target.value;\r\n    //     return num\r\n    // }\r\n\r\n    // const buildTable = (props) => {\r\n    //     const table = document.getElementById('tripTable')\r\n\r\n    //     for(let i=0; i<getParkNames.length; i++){\r\n    //         let row = `<tr>\r\n    //                         <td>${getParkNames[i]} ${getStateNames[i]}</td>\r\n    //                    <tr>\r\n    //                    `\r\n\r\n    //         table.innerHTML += row\r\n    //     }\r\n    // }\r\n   \r\n    // useEffect(()=>{\r\n    //     buildTable();\r\n    // }, [])\r\n    // const getParkNames = props.allTrips;\r\n//i need this function to show the trips generated from the get request in addtrips\r\n//i need to show at least one trip to start\r\n    return(\r\n        <div>\r\n            <div>\r\n                <table>\r\n                    <tbody id=\"tripTable\">\r\n                        <tr>                        \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n                        \r\n}","C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\photos\\photos.js",["59","60"],"C:\\Users\\Xeng\\Desktop\\DCC\\DevCodeCapstone\\Client\\capstone\\src\\components\\location\\location.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":16,"column":13,"nodeType":"67","messageId":"68","endLine":16,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":28,"column":13,"nodeType":"67","messageId":"68","endLine":28,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":22},{"ruleId":"65","severity":1,"message":"70","line":9,"column":10,"nodeType":"67","messageId":"68","endLine":9,"endColumn":19},{"ruleId":"65","severity":1,"message":"71","line":9,"column":21,"nodeType":"67","messageId":"68","endLine":9,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":49,"column":9,"nodeType":"67","messageId":"68","endLine":49,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":64,"column":3,"nodeType":"67","endLine":64,"endColumn":12,"suggestions":"74"},{"ruleId":"65","severity":1,"message":"75","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"76","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"77","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":53,"column":27,"nodeType":"80","endLine":53,"endColumn":37},{"ruleId":"81","severity":1,"message":"82","line":74,"column":21,"nodeType":"83","endLine":74,"endColumn":62},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'NPS_BASE_URL' is defined but never used.","'stateName' is assigned a value but never used.","'setStateName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setLoading'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["86"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Add dependencies array: []",{"range":"89","text":"90"},[2067,2067],", []"]